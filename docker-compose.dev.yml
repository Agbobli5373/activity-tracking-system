version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: activity-tracking-app-dev
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - .:/var/www/html
      - /var/www/html/vendor
      - /var/www/html/node_modules
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=activity_tracking_dev
      - DB_USERNAME=activity_user
      - DB_PASSWORD=dev_password
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      - db
      - redis
    networks:
      - activity-network-dev

  db:
    image: mysql:8.0
    container_name: activity-tracking-db-dev
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: activity_tracking_dev
      MYSQL_USER: activity_user
      MYSQL_PASSWORD: dev_password
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - db_data_dev:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - activity-network-dev

  redis:
    image: redis:7-alpine
    container_name: activity-tracking-redis-dev
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - activity-network-dev

  mailhog:
    image: mailhog/mailhog
    container_name: activity-tracking-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - activity-network-dev

  prometheus:
    image: prom/prometheus:latest
    container_name: activity-tracking-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
    networks:
      - activity-network-dev

  grafana:
    image: grafana/grafana:latest
    container_name: activity-tracking-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - activity-network-dev

volumes:
  db_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  activity-network-dev:
    driver: bridge
